#load required packages
library(tidyverse)
library(leaflet)
library(sp)
library(sf)
library(rgdal)
#load data
df <- read_csv('jan_dec.csv')
#replace Inf values with 0
df <- df %>%
mutate(avg_mph = ifelse(avg_mph == Inf, 0, avg_mph))
#read taxi zone shapefiles
taxi_zones <- readOGR("data/taxi_zones/taxi_zones.shp")
#transform polygon
proj <- spTransform(taxi_zones, '+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs')
zone_volume <- function(zone) {
filtered_df <- df %>%
filter(PULocationID == zone) %>%
group_by(DOLocationID) %>%
tally()
return(filtered_df)
}
zone_volume_map <- function(zone_ID) {
filtered_df <- df %>%
filter(PULocationID == zone_ID) %>%
group_by(DOLocationID) %>%
tally()
#create popup contents
content_do <- paste("Neighborhood:", taxi_zones$zone, "<br/>",
"Number of Dropoffs:", filtered_df$n, "<br/>")
#create map
leaflet(filtered_df) %>%
addTiles() %>%
setView(lng = -73.98928, lat = 40.75042, zoom = 10.2) %>%
addProviderTiles("CartoDB.Positron") %>%
addPolygons(
data = proj,
popup = content_do,
weight = 1,
fillColor = ~colorQuantile("Blues", filtered_df$n)(filtered_df$n),
fillOpacity = 1,
highlightOptions = highlightOptions(
color='#000000',
weight = 3,
bringToFront = TRUE,
sendToBack = TRUE),
label = taxi_zones$zone) %>%
addLegend("topright",
pal = colorQuantile("Blues", test$n, n = 5),
values = filtered_df$n,
title = "Drop Off Volume",
opacity = 1)
}
#test function
test <- zone_volume(132)
zone_volume_map(132)
